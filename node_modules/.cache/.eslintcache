[{"/Users/mike/Desktop/my-gpa/src/index.js":"1","/Users/mike/Desktop/my-gpa/src/App.js":"2","/Users/mike/Desktop/my-gpa/src/reportWebVitals.js":"3","/Users/mike/Desktop/my-gpa/src/GPATable.js":"4"},{"size":500,"mtime":1648624530395,"results":"5","hashOfConfig":"6"},{"size":3246,"mtime":1648624530394,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1648624530395,"results":"8","hashOfConfig":"6"},{"size":4176,"mtime":1648624530395,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7pqvkv",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/mike/Desktop/my-gpa/src/index.js",[],"/Users/mike/Desktop/my-gpa/src/App.js",["20"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport { useRef, useState  } from 'react';\nimport useLocalStorage from 'react-localstorage-hook';\nimport Data from './cs-2019.json';\nimport GPATable from './GPATable';\n\nfunction App() {\n\n  const yearRef = useRef();\n  const termRef = useRef();\n  const courseRef = useRef();\n  const gradeRef = useRef();\n\n  const [dataItems, setDataItems] = useLocalStorage(\"dataItems\", []);\n\n  var courseData = []\n\n  var x = []\n  const options = Data.curriculum.subjects.map((v, i) => {\n    x = [] \n    v.subjects.forEach((e, j) => {\n\n      x.push(<option key={j} value={e.name}>{e.code} {e.name}</option>)\n      courseData.push([e.name, e.code, e.credits])\n\n    })\n\n    return x\n  })\n\n  const addItem = () => {\n\n    var itemObj = {\n      year: yearRef.current.value,\n      term: termRef.current.value,\n      course: courseRef.current.value,\n      grade: gradeRef.current.value\n    }\n\n    dataItems.push(itemObj)\n    setDataItems([...dataItems])\n\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col xs={5} style={{backgroundColor: '#eaeaea'}}>\n          <br/><h1>Information</h1><br/>\n          <Form>\n          <h3>Semester</h3>\n            <Row>\n              <Form.Group as={Col} className=\"mb-3\">\n                Year\n                <Form.Select aria-label=\"Select year\" ref={yearRef}>\n                  <option value=\"2020\">2020</option>\n                  <option value=\"2021\">2021</option>\n                  <option value=\"2022\">2022</option>\n                </Form.Select>\n              </Form.Group>\n\n              <Form.Group as={Col} className=\"mb-3\">\n                Term\n                <Form.Select aria-label=\"Select semester\" ref={termRef}>\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                </Form.Select>\n              </Form.Group>     \n            </Row>  \n\n            <Form.Group as={Col} className=\"mb-3\">\n              Course\n              <Form.Select aria-label=\"Select course\" ref={courseRef}>\n                {options}\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group as={Col} className=\"mb-3\">\n              Grade\n              <Form.Select aria-label=\"Select grade\" ref={gradeRef}>\n                <option value=\"A\">A</option>\n                <option value=\"A-\">A-</option>\n                <option value=\"B+\">B+</option>\n                <option value=\"B\">B</option>\n                <option value=\"B-\">B-</option>\n                <option value=\"C+\">C+</option>\n                <option value=\"C\">C</option>\n                <option value=\"C-\">C-</option>\n                <option value=\"D\">D</option>\n                <option value=\"F\">F</option>\n                <option value=\"-\">W, I, S, U, R, TR</option>\n              </Form.Select>\n            </Form.Group>\n\n            <Button variant=\"outline-dark\" onClick={addItem}>\n              Submit\n            </Button>\n          </Form>\n        </Col>\n\n        <Col>\n          <GPATable data={dataItems} setDataItems={setDataItems} courseData={courseData}/>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","/Users/mike/Desktop/my-gpa/src/reportWebVitals.js",[],"/Users/mike/Desktop/my-gpa/src/GPATable.js",["21"],"import { useState, useEffect } from 'react';\nimport { Container, Row, Col, Table, Button } from \"react-bootstrap\";\nimport { FaTrash } from 'react-icons/fa';\n\n\n\nvar semesterGPA = []\nvar semesterGPA2 = []\nvar semesterGPA3 = []\n\nfunction GPATable({ data, setDataItems, courseData }) {\n    const [dataRows, setDataRows] = useState();\n    const [totalGrade, settotalGrade] = useState(0);\n\n    const styles = {\n      textCenter: {textAlign: 'center'},\n      textRight: {textAlign: 'right'},\n      textLeft: {textAlign: 'left'}\n    }\n\n    useEffect(() => {\n\n      let gpa = 0\n      let currentGrade = 0\n      let credit = 0\n      let totalcredit = 0\n\n      const z = data.map((v, i) => {\n\n        if (v.grade === \"A\") {\n          currentGrade = \"4.00\"\n        } \n        else if (v.grade === \"A-\") {\n          currentGrade = \"3.75\"\n        } \n        else if (v.grade === \"B+\") {\n          currentGrade = \"3.25\"\n        } \n        else if (v.grade === \"B\") {\n          currentGrade = \"3.00\"\n        } \n        else if (v.grade === \"B-\") {\n          currentGrade = \"2.75\"\n        } \n        else if (v.grade === \"C+\") {\n          currentGrade = \"2.25\"\n        } \n        else if (v.grade === \"C\") {\n          currentGrade = \"2.00\"\n        } \n        else if (v.grade === \"C-\") {\n          currentGrade = \"1.75\"\n        } \n        else if (v.grade === \"D\") {\n          currentGrade = \"1.00\"\n        } \n        else if (v.grade === \"F\") {\n          currentGrade = \"0.00\"\n        } \n        else if (v.grade === \"-\") {\n          currentGrade = \"0.00\"\n        }\n\n        courseData.forEach((e) => {\n\n          if (v.grade !== \"-\" && e[0] === v.course) {\n            credit = e[2]\n            totalcredit += Number(credit)\n          }\n\n        })\n\n        gpa += Number(currentGrade) * Number(credit) \n\n        let sem = \"\" + v.term + \"/\" + v.year\n        let existInArr = semesterGPA.indexOf(sem) > -1\n        let semChanged = false\n\n        if (existInArr === false) {\n          semesterGPA.push(sem)\n          semChanged = true\n        }\n\n        if (semChanged === true) {\n          semesterGPA2.push([sem, 0, 0, 0, 0]) \n          semesterGPA3.push([sem, 0]) \n        }\n\n        let currGPA = 0\n        semesterGPA2.forEach((s) => {\n\n          if (s[0] === sem) {\n            s[1] += Number(currentGrade) \n            s[2] += Number(credit) \n            s[3] += Number(currentGrade) * Number(credit) \n            s[4] = s[3] / s[2] \n            currGPA = s[4]\n          }\n\n        })\n\n        semesterGPA3.forEach((sg) => {\n          if (sg[0] === sem) {\n            sg[1] = currGPA\n          }\n        })\n        \n        return (\n          <tr key={i}>\n            <td style={styles.textCenter}><FaTrash onClick={() => deleteClick(i)}/></td>\n            <td style={styles.textleft}>{v.term}{\"/\"}{v.year}</td>\n            <td style={styles.textleft}>{v.course}</td>\n            <td style={styles.textCenter}>{v.grade}</td>\n          </tr>\n        );\n      });\n    setDataRows(z);\n    settotalGrade(gpa / totalcredit) \n    }, [data]);\n\n    const clearData = () => {\n\n      setDataItems([])\n      setDataRows([])\n\n    }\n\n    const deleteClick = (i) => {\n\n      data.splice(i,1)\n      setDataItems([...data])\n\n    }\n\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <h2>Kasemdet Soommart</h2>\n            <h2>6213639</h2>\n            <br />\n          </Col>\n        </Row>\n\n        <Table bordered hover>\n          <thead>\n            <tr>\n              <th style={styles.textCenter}>Delete</th>\n              <th style={styles.textCenter}>Semester</th>\n              <th style={styles.textCenter}>Course</th>\n              <th style={styles.textCenter}>Grade</th>\n            </tr>\n          </thead>\n          <tbody>\n            {dataRows}\n          </tbody>\n          <tfoot>\n            <tr>\n              <th colSpan={2}></th>\n              <th style={styles.textRight}>GPA</th>\n              <th style={styles.textCenter}>{(totalGrade).toFixed(2)}</th>\n            </tr>\n          </tfoot>\n        </Table>\n        <Col>\n          <Button onClick={clearData} variant=\"dark\">Clear</Button>\n        </Col>\n      </Container>\n    )\n}\n\nexport default GPATable;",{"ruleId":"22","severity":1,"message":"23","line":3,"column":18,"nodeType":"24","messageId":"25","endLine":3,"endColumn":26},{"ruleId":"26","severity":1,"message":"27","line":119,"column":8,"nodeType":"28","endLine":119,"endColumn":14,"suggestions":"29"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'courseData', 'deleteClick', 'styles.textCenter', and 'styles.textleft'. Either include them or remove the dependency array.","ArrayExpression",["30"],{"desc":"31","fix":"32"},"Update the dependencies array to be: [courseData, data, deleteClick, styles.textCenter, styles.textleft]",{"range":"33","text":"34"},[3017,3023],"[courseData, data, deleteClick, styles.textCenter, styles.textleft]"]